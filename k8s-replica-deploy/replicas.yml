apiVersion: apps/v1
kind: ReplicaSet 
metadata:
  name: resource-spec
  labels:
    app: rapido-application
    env: uat
  namespace: testing
  annotations: 
    repo: 934545598565.dkr.ecr.ap-south-1.amazonaws.com/cssi
spec:
  minReadySeconds: 6
  replicas: 4
  selector:
    matchLabels:
      app: rep-cont-match
  template:
    metadata:
      # name: cont-define because Usually we don’t set name in Pod template, because ReplicaSet generates multiple Pods (they need unique names).
      labels:
        app: rep-cont-match
    spec:
      containers:
        - name: my-containers
          #image: 934545598565.dkr.ecr.ap-south-1.amazonaws.com/cssi:latest
          image: rajgandhi123/css-repo:glass
          ports:
            - containerPort: 80
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: 80
          livenessProbe:
#             livenessProbe.exec with ["echo hello my replica"] → this will always succeed (echo returns 0). So it doesn’t actually check container health.

# Usually, liveness probe should test the app (e.g. HTTP GET /health).

# Readiness + Startup probes are fine.
            # exec:
            #   command:
            #     ["echo hello my replica"]
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            requests:
              cpu: "200m"
              memory: "350Mi"
            limits:
              cpu: "500m"
              memory: "1000Mi"

              